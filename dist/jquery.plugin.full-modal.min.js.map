{"version":3,"sources":["jquery.plugin.full-modal.js"],"names":["global","$","arguments","length","undefined","removeClass","Date","afterClose","css","autoprefixer","str","cssname","value","cssRules","modal","forEach","prefix","modals","Error","fullModalMapper","Map","backdrop","Backdrop","duration","_classCallCheck","this","DEACTIVATED_ZINDEX","container","initialize","_createClass","key","el","$el","isOpen","append","on","closeWhenClickBackdrop","item","close","fadeIn","filter","fadeOut","FullModal","openedModals","option","$modalEl","find","isActivated","_this","e","stopPropagation","call","open","show","animate","background","addClass","_this2","afterOpen","opacity","_this3","beforeClose","hide","deactivate","activate","_this4","zIndex","trigger","beforeOpen","noop","fn","fullModal","options","each","$this","isString","get","data","method","ALLOW_USER_INVOKES","indexOf","console","error","prefixes","extend","defaults","id","uniqueId","window"],"mappings":"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","file":"jquery.plugin.full-modal.min.js","sourcesContent":["(function (global, $) {\r\n  if (!$) throw new Error('请先加载jquery');\r\n  \r\n  const fullModalMapper = new Map();\r\n  const modals=[];\r\n  \r\n  let backdrop;\r\n  \r\n  const ACTIVATED_ZINDEX=102;\r\n  const DEACTIVATED_ZINDEX=101;\r\n  \r\n  class Backdrop {\r\n    constructor(container, duration) {\r\n      if (backdrop instanceof Backdrop) return backdrop;\r\n      \r\n      this.isOpen = false;\r\n      this.duration = duration;\r\n      this.container = $(container);\r\n      this.initialize();\r\n    }\r\n    \r\n    initialize() {\r\n      let el = this.$el = $('<div class=\"ibs-backdrop\"></div>');\r\n      this.container.append(el);\r\n      el.on('click',()=>{\r\n        modals.forEach(item=>{\r\n          if(item.option.closeWhenClickBackdrop){\r\n            item.close();\r\n          }\r\n        })\r\n      });\r\n    }\r\n    \r\n    open() {\r\n      this.$el.fadeIn(this.duration);\r\n      this.isOpen = true;\r\n    }\r\n    \r\n    close() {\r\n      let openedModals=modals.filter(item=>item.isOpen);\r\n      \r\n      if(openedModals.length>1)return;\r\n      \r\n      this.$el.fadeOut(this.duration);\r\n      this.isOpen = false;\r\n    }\r\n  }\r\n  \r\n  \r\n  class FullModal {\r\n    /**\r\n     * create a modal instance\r\n     * @param el {jQuery|*}\r\n     * @param option {Object}\r\n     */\r\n    constructor(el, option) {\r\n      this.$el = el;\r\n      this.option = option;\r\n      this.$modalEl = this.$el.find('.ibs-full-modal');\r\n      this.isOpen = false;\r\n      this.isActivated=false;\r\n      this.backdrop = backdrop = new Backdrop('body', option.duration + 200);\r\n      this.initialize();\r\n    }\r\n    \r\n    initialize() {\r\n      \r\n      if (this.option.closeWhenClickBackdrop) {\r\n        this.$el.on('click', () => this.close());\r\n      }\r\n      \r\n      this.$modalEl.on('click', e => e.stopPropagation())\r\n        .on('click', '.ibs-btn-close', () => this.close());\r\n      \r\n      this.$modalEl.css(autoprefixer('transition','all '+this.option.duration+'ms'));\r\n    }\r\n    \r\n    open() {\r\n      this.option.beforeOpen.call(this);\r\n      \r\n      this.activate();\r\n      \r\n      this.backdrop.open();\r\n      \r\n      this.$el.show();\r\n      \r\n      this.$modalEl.animate({\r\n        background: '#fff'\r\n      },this.option.duration,()=>{\r\n        $('body').addClass('full-modal-open');\r\n        this.option.afterOpen.call(this)\r\n      }).css(autoprefixer('transform', 'translateX(0)'))\r\n        .css({opacity:1});\r\n      \r\n      this.isOpen = true;\r\n    }\r\n    \r\n    close() {\r\n      this.option.beforeClose.call(this);\r\n      this.backdrop.close();\r\n      this.$modalEl.animate({\r\n        background: 'transparent'\r\n      },this.option.duration,()=>{\r\n        $('body').removeClass('full-modal-open');\r\n        this.option.afterClose.call(this);\r\n        this.$el.hide();\r\n        this.deactivate();\r\n      })\r\n        .css(autoprefixer('transform', 'translateX(30%)'))\r\n        .css({opacity:0});\r\n      \r\n      this.isOpen = false;\r\n    }\r\n  \r\n    activate(){\r\n     \r\n      modals.forEach(modal=>{\r\n        if(modal===this){\r\n          modal.isActivated=true;\r\n          modal.$el.css({zIndex:ACTIVATED_ZINDEX});\r\n        }else{\r\n          modal.isActivated=false;\r\n          modal.$el.css({zIndex:DEACTIVATED_ZINDEX});\r\n        }\r\n      });\r\n    }\r\n    \r\n    deactivate(){\r\n      this.isActivated=false;\r\n      this.$el.css({zIndex:DEACTIVATED_ZINDEX});\r\n    }\r\n  }\r\n  \r\n  \r\n  function uniqueId(prefix = 'full-modal-') {\r\n    return `${prefix}${Date.now()}`;\r\n  }\r\n  \r\n  function isString(str) {\r\n    return typeof str === 'string';\r\n  }\r\n  \r\n  function autoprefixer(cssname, value) {\r\n    let prefixes=['webkit','moz','ms','o'];\r\n    let cssRules={};\r\n    \r\n    prefixes.forEach(prefix=>{\r\n      cssRules[`-${prefix}-${cssname}`]=value;\r\n    });\r\n    return cssRules;\r\n  }\r\n  \r\n  const ALLOW_USER_INVOKES = ['open', 'close'];\r\n  const defaults = {\r\n    duration: 300,\r\n    trigger: '',\r\n    closeWhenClickBackdrop: true,\r\n    beforeOpen: $.noop,\r\n    beforeClose: $.noop,\r\n    afterOpen: $.noop,\r\n    afterClose: $.noop\r\n  };\r\n  \r\n  $.fn.fullModal = function (options) {\r\n    \r\n    return this.each(function () {\r\n      let $this = $(this);\r\n      \r\n      if (isString(options)) {\r\n        \r\n        let modal = fullModalMapper.get($this.data('uniqueId'));\r\n        let method = options;\r\n        \r\n        if (modal) {\r\n          \r\n          if (ALLOW_USER_INVOKES.indexOf(method) < 0) {\r\n            return console.error(`method:\"${method}\" is not allowed invoke on modal instance,expected method are [\"open\",\"close\"]`);\r\n          }\r\n          \r\n          return modal[method]();\r\n        } else {\r\n          return console.error('please initialize modal first');\r\n        }\r\n      }\r\n      \r\n      let option = $.extend(defaults, options);\r\n      \r\n      let id = uniqueId();\r\n      let modal = new FullModal($this, option);\r\n      \r\n      $this.data('uniqueId', id);\r\n      \r\n      fullModalMapper.set(id, modal);\r\n      modals.push(modal);\r\n      \r\n      if(option.trigger){\r\n        $(option.trigger).on('click', function () {\r\n          modal.open();\r\n        });\r\n      }\r\n    });\r\n  };\r\n})(window, jQuery);"]}